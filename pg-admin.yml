apiVersion: apps/v1 # se crean pods y tienen ip
kind: Deployment
metadata:
  name: pgadmin-deployment
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata: # se etiquetan los pods
      labels:
        app: pgadmin
    spec:
      containers:
      - name: pgadmin
        image: dpage/pgadmin4:7.0
        ports:
        - containerPort: 80
        env:
          - name: PGADMIN_DEFAULT_PASSWORD # .env
            valueFrom: 
              secretKeyRef:
                name: pgadmin-secrets #nombre de secrets
                key: PG_PASSWORD
          - name: PGADMIN_DEFAULT_EMAIL # .env
            valueFrom: 
              secretKeyRef:
                name: pgadmin-secrets #nombre de secrets
                key: PG_USER_EMAIL
          - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
            value: 'False'
          # - name: POSTGRES_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       name: pgadmin-secrets
          #       key: DB_PASSWORD
---
apiVersion: v1
kind: Service  # se crea un servicio
metadata:
  name: pgadmin-service
spec:
  type: NodePort
  selector:
    app: pgadmin
  ports:
    - protocol: TCP
      port: 80 # puerto exterior(cualquier puerto)
      targetPort: 80  # revisar node port en services
      nodePort: 30200  # revisar node port en services

